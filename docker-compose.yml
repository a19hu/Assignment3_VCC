version: '3.8'

services:
  flask-app:
    build: ./app
    container_name: flask-app
    ports:
      - "5000:5000"
    restart: unless-stopped
    networks:
      - monitoring

  nginx:
    image: nginx
    container_name: nginx-lb
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/backend_servers.conf:/etc/nginx/conf.d/backend_servers.conf:rw
    depends_on:
      - flask-app
    restart: unless-stopped
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: "0:0" 
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring

  CloudGCP:
    build: ./CloudGCP
    container_name: CloudGCP
    ports:
      - "5001:5001"
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - flask-app, nginx, prometheus, grafana

networks:
  monitoring:
    driver: bridge
